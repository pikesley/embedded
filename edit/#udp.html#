<!doctype html>
<meta charset="utf-8"/>

<html>
<head>
<script src="osc-browser.js"></script>
</head>
<body>

    <script>
      var changes = [];
      var oscPort = new osc.WebSocketPort({
            url: "ws://localhost:9160" // URL to your Web Socket server.
      });
      oscPort.on("error", function (error) {
        console.log("An error occurred: ", error.message);
      }
        var rv = oscPort.send({
             address: "/hello",
             args: 0.5
        });
        alert("sent: " + rv);


      editor.setOption("extraKeys", {
        "Ctrl-Enter": function(cm) {
          var selection;
          if (cm.somethingSelected()) {
            selection = cm.getSelection();
          }
          else {
            var pos = cm.getCursor();
            var nonempty = /\S/;
            selection = cm.getLine(pos.line);
            if (nonempty.test(selection)) {
              var above = pos.line - 1;
              // todo check for non-whitespace
              while (above >= 0 && nonempty.test(cm.getLine(above))) {
                selection = cm.getLine(above) + "\n" + selection;
                above--;
              }
              var below = pos.line + 1;
              while (below < cm.lineCount() && nonempty.test(cm.getLine(below))) {
                selection = selection + "\n" + cm.getLine(below);
                below++;
              }
              var c = cm.getCursor();

              // highlight evaluated area
              // make editor temporarily read only so that the selection doesn't get 
              // overwritten by fast typing..
              cm.setOption('readOnly', true);
              cm.setSelection({line: above+1, ch: 0}, {line: below, ch:0});
              setTimeout(function(){cm.setCursor(c);cm.setOption('readOnly', false);},100);
            }
          }
          console.log("eval: " + selection);
          // var spaces = Array(cm.getOption("indentUnit") + 1).join(" ");
          // cm.replaceSelection(spaces);
        }
      });

    </script>

</body>
</html>
