-- x age
--   fix pan
-- x hush x1

import Light

lightServer
l1 <- lightStream
let x1 p = d1 p >> l1 p
let hush = mapM_ ($ silence) [c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,x1]

x1 $ slow 4 $ jux rev $ striate 32 $ sound "" # n "51"
  # dur "0.1"


let stringToColour' ('b':'d':[]) = red
    stringToColour' ('c':'p':[]) = green
    stringToColour' ('k':'u':'r':'t':[]) = blue
    stringToColour' s = stringToColour s


x1 $ chop 8 $ jux rev $ s "cp bd cp bd*3"

x1 silence

l1 $ s "orange*8" # pan (slow 4 sine1)
l1 silence
l1 $ s "red green" # pan "0"

l1 $ s (p "{purple pink, orange blue green}" :: Pattern ColourD)
l1 $ rgb "x"
c2rgb red

l1 silence
l1 $ red "[0 0.1]*16" # green (slow 2 saw1) # blue (slow 4 sine1)
  
l1 $ red "0"

x1 $ sound "bd 0 0 0"

output <- SP.openSerial "/dev/ttyUSB0" SP.defaultSerialSettings
let to256 f = show $ floor (f * 255)

SP.send output $ B.pack $ "r\r"

l1 $ red "0.5*8"

lightServer

let to256 f = show $ floor (f * 255)

