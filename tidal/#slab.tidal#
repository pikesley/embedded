d1 $ jux (# speed "2") $ every 4 (density 1.5) $ sound (samples "claus*8" (irand 8))
  # nudge "0.57"


d2 $ sound "ind:4"
  # nudge "0"

cps 0.5
hush

d1 $ jux (iter 4) $ every 2 (chop 8) $ stack [sound "bd [bd ~ bd] bd bd",
                                              sound "~ cp8:3"
                                             ]

# nudge "0.57"

cps 4






(mTempo, mCps) <- runClient

t <- readMVar mTempo
t
d1 $ sound "bd"
  # nudge "-0.4"

d1 $ striate 8 $ sound "bev" # cut "1"


d2 $ sometimes (rev . chop 8) $ sometimes (|+| speed "2") $
  jux (0.25 <~) $ sound (samples "[ifdrums*8, future*8]" (run 8))
  # nudge "[0 0.04]*4" # shape "0.2"

d1 $ slow 4 $ chop 16 $ sound (samples "repetition" (irand 8))
  # unit "c" # speed "0.25"
  # gain "1.1"


d1 $ (slowspread (chop) [128,64,32] $ jux rev $ sound "drum*2 [drum:4 drum:2 ~ cp]")
  # nudge (slow 4 $ sine1)

d1 $ n "b4" # s "xx" # gain "0.7"

d1 $ sound (samples "claus*2 claus*4" (irand 16))


d2 $ slow 1 $ chop 8 $ sound "os:2"

d2 $ jux rev $ slow 4 $ n (offadd 0.125 12 $ offadd 0.25 7 $ "f3(3,8) a3*2 c3(5,8) e3*2") # s "[xx pno2]/2"
  # nudge "0.57"
  # cutoff (slow 4 $ scale 1000 5000 sine1)
  -- # resonance "0.2"
  -- # vowel "[a i u e]/4"
  -- # speed "2"

d1 $ sound "bd"
  # nudge "0.55"

d3 $ jux (iter 4) $ sound "drum ~ [odx drum] sn:4"
  # gain "1.1"
  # nudge "0.57"

d4 $ every 3 (rev) $ every 2 (# speed "2") $ slow 2 $ jux (iter 4) $ slowspread (chop) [64,128] $ sound "arc"
  # nudge "0.57"

d5 $ sound "drum"
hush

cps 0.4


import Data.Fixed
d1 $ superimpose

let juxBy n f p = stack [p |+| pan (pure $ mod' (0-(n/2)) 1), f $ p # pan (pure $ mod' (n/2) 1)]


d1 $ juxBy 1 (density 2) $ sound "bd"


d1 $ whenmod 6 3 (const silence) $ every 4 (density 2) $ n "1 2*4 5 ~" # s "metal"
  # nudge "0.55" # speed "0.5"

d1 $ sound "arpy" # speed "2" # speed "3"

d2 $ slow 8 $ chop 8 $ sound "bev" # unit "c" # speed "0.125"


hush
d1 silence
d1 $ n "c d4*2 e f" # sound "pno2" 

hush


d1 $ jux rev $ slowspread (chop) [8,32,128,64] $ sound "cp arpy*2 arpy:3 bd"
  # nudge "0.55"


d1 $ weave 16 (n (run 8) # s "arpy")
  [vowel "a e i u",
   vowel "i u e"
  ]

d1 $ weave 16 (n (run 8) # s "arpy")
  [vowel "a [e o] i o",
   vowel "e*4 u*3",
   vowel "i [e i e] i o",
   speed "1 2 3"
  ]

d1 $ weave 16 (sound "bd [sn drum:2*2] bd*2 [sn drum:1]")
  [vowel "a i u",
   vowel  "i o e u"
  ]
  
hush


d1 $ sound "alex2*16" # n (run 100)
  # pan sine1

hush
hush




1 2 3 4
2 3 4 1
3 4 1 2
4 1 2 3

d



d1 $ every 4 (density 1.5) $ sound (samples (struct "x [~ x] [x*2 x] x" "claus") (run 8))
  # vowel "[a e]/2"
  # room "0.6"
  # size "0.7"
  # orbit "1"

d2 $ brak $ slowspread (chop) [8,16,32,64] $ sound "drum ~ [sd8:4 mt:2?] ~"
  # room "0.1"
  # size "0.3"
  # orbit "2"
  # crush "5"
  # speed "[1,2]"
  # gain "1"
  # resonance "0.3"
  # cutoff (scale 1000 4000 sine1)

d5 $ every 4 (rev) $ iter 4 $ slow 2 $ chop 8 $ sound "arc"
  # gain "1.1"
  # speed "[1,0.5]"

d6 $ degrade $ n (offadd 0.125 12 $ offadd 0.25 7 ("[f3 g3]/2(3,8) a3*3 c3*2 e2(5,8)")) # s "xx"
  # gain "1.1"
  # cutoff (slow 4 $ scale 1000 4000 sine1)
  # resonance "0.2"

d7 $ sound "cp"

d8 $ slow 2 $ s "bd ~ bd glitch*2" # n (irand 8)


d4 $ sound (samples "[sd8, jvbass]*8" (slow 8 $ scan 8))

d2 $ foldEvery [5,7] (|*| up "7") $  jux (iter 4) $ stut' 7 (- (1/32)) ((|+| crush "3") . (|*| gain "0.9")) $ sound (samples' "arpy" (slow 2 $ "0 [5 3]"))
  # speed "[1,2]"

d3 $ sometimes (|*| up "12") $ jux rev $ slow 4 $ sound (samples' "[aid]" (offadd (-0.125) 12 $ tom "c3(3,8) e3(3,8) f3(3,8) g3(3,8)")) # up "3"


  (d4 $ jux (iter 4) $ (slow 4 $ chop 16 $ sound "paper"
                        # unit "c"
                        # speed "[0.25]"
                        # gain "0.8"))
  
